﻿@model FIT5032_VMedProject.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}

<main aria-labelledby="title">
    <h2 id="title">@ViewBag.Title.</h2>

    @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { role = "form" }))
    {
        @Html.AntiForgeryToken()
        <h4>Create a new account.</h4>
        <hr />
        @Html.ValidationSummary("", new { @class = "text-danger" })
        <div class="row">
            @Html.LabelFor(m => m.FirstName, new { @class = "col-md-2 col-form-label" })
            <div class="col-md-10">
                <input type="text" class="form-control" id="FirstName" name="FirstName" />
                @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            @Html.LabelFor(m => m.LastName, new { @class = "col-md-2 col-form-label" })
            <div class="col-md-10">
                <input type="text" class="form-control" id="LastName" name="LastName" />
                @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            @Html.LabelFor(m => m.Gender, new { @class = "col-md-2 col-form-label" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.Gender, new SelectList(new[]
                {
                    new { Value = "Male", Text = "Male" },
                    new { Value = "Female", Text = "Female" },
                    new { Value = "Other", Text = "Other" }
                }, "Value", "Text"), "Select Gender", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Gender, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            @Html.LabelFor(m => m.PhoneNumber, new { @class = "col-md-2 col-form-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            @Html.LabelFor(m => m.Email, new { @class = "col-md-2 col-form-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
            </div>
        </div>
        <div class="row">
            @Html.LabelFor(m => m.Password, new { @class = "col-md-2 col-form-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
            </div>
        </div>
        <div class="row">
            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 col-form-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
            </div>
        </div>
        <br />
        <div class="row">
            <div class="offset-md-2 col-md-10">
                <input type="submit" value="Register" class="btn btn-default" />
            </div>
        </div>
    }
</main>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            // Attach keyup event handlers to the text input fields
            $('#FirstName, #LastName').on('keyup', function () {
                var inputValue = $(this).val();
                // Remove characters that do not match [\w\s\d]
                inputValue = inputValue.replace(/[^\w\d]/g, '');
                // Update the input value
                $(this).val(inputValue);
            });
        });
    </script>
}